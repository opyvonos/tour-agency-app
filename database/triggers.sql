CREATE OR REPLACE TRIGGER ACCOUNT_NUMBER_TRG BEFORE
INSERT ON ACCOUNT
FOR EACH ROW
  WHEN (new.account_number IS NULL)
BEGIN
  SELECT S_ACCOUNT_NUMBER.NEXTVAL INTO :new.account_number FROM dual;
END;
/

CREATE OR REPLACE TRIGGER BOOKING_ID_TRG
BEFORE INSERT ON BOOKING
FOR EACH ROW
  WHEN (new.booking_id IS NULL)
BEGIN
  SELECT S_BOOKING_ID.NEXTVAL INTO :new.booking_id FROM dual;
END;
/

CREATE OR REPLACE TRIGGER CITY_ID_TRG
BEFORE INSERT ON CITY
FOR EACH ROW
  WHEN (new.city_id IS NULL)
BEGIN
  SELECT S_CITY_ID.NEXTVAL INTO :new.city_id FROM dual;
END;
/

CREATE OR REPLACE TRIGGER CUSTOMER_ID_TRG
BEFORE INSERT ON CUSTOMER
FOR EACH ROW
  WHEN (new.cust_id IS NULL)
BEGIN
  SELECT S_CUSTOMER_ID.NEXTVAL INTO :new.cust_id FROM dual;
END;
/

CREATE OR REPLACE TRIGGER HOTEL_ID_TRG
BEFORE INSERT ON HOTEL
FOR EACH ROW
  WHEN (new.hotel_id IS NULL)
BEGIN
  SELECT S_HOTEL_ID.NEXTVAL INTO :new.hotel_id FROM dual;
END;
/

CREATE OR REPLACE TRIGGER TOUR_ID_TRG
BEFORE INSERT ON TOUR
FOR EACH ROW
  WHEN (new.tour_id IS NULL)
BEGIN
  SELECT S_TOUR_ID.NEXTVAL INTO :new.tour_id FROM dual;
END;
/

CREATE OR REPLACE TRIGGER MANAGER_ID_TRG
BEFORE INSERT ON TOUR_MANAGER
FOR EACH ROW
  WHEN (new.manager_id IS NULL)
BEGIN
  SELECT S_MANAGER_ID.NEXTVAL INTO :new.manager_id FROM dual;
END;
/

CREATE OR REPLACE TRIGGER TOUR_TYPE_ID_TRG
BEFORE INSERT ON TOUR_TYPE
FOR EACH ROW
  WHEN (new.tour_type_id IS NULL)
BEGIN
  SELECT S_TOUR_TYPE_ID.NEXTVAL INTO :new.tour_type_id FROM dual;
END;
/

CREATE OR REPLACE TRIGGER TRANSPORT_ID_TRG
BEFORE INSERT ON TRANSPORT
FOR EACH ROW
  WHEN (new.transport_id IS NULL)
BEGIN
  SELECT S_TRANSPORT_ID.NEXTVAL INTO :new.transport_id FROM dual;
END;
/